apiVersion: v1
kind: ConfigMap
metadata:
  name: transmission-config
data:
  settings.json: |
    {
      "bind-address-ipv4": "0.0.0.0",
      "bind-address-ipv6": "::",
      "blocklist-enabled": true,
      "blocklist-url": "http://list.iblocklist.com/?list=ydxerpxkpcfqjaybcssw&fileformat=p2p&archiveformat=gz",
      "download-dir": "/vol/mnt/downloads",
      "download-queue-enabled": true,
      "download-queue-size": 20,
      "encryption": 2,
      "incomplete-dir": "/transmission/incomplete",
      "incomplete-dir-enabled": true,
      "max-peers-global": 200,
      "message-level": 2,
      "peer-limit-global": 34919,
      "peer-limit-per-torrent": 16959,
      "port-forwarding-enabled": false,
      "preallocation": 0,
      "queue-stalled-enabled": true,
      "queue-stalled-minutes": 5,
      "ratio-limit": 0,
      "ratio-limit-enabled": true,
      "rename-partial-files": true,
      "rpc-authentication-required": false,
      "rpc-host-whitelist": "*.internal",
      "rpc-host-whitelist-enabled": true,
      "rpc-url": "/transmission/",
      "rpc-whitelist": "127.0.0.1",
      "rpc-whitelist-enabled": false,
      "script-torrent-done-enabled": true,
      "script-torrent-done-filename": "/remove-completed.sh",
      "speed-limit-down": 1900,
      "speed-limit-down-enabled": true,
      "speed-limit-up": 10,
      "speed-limit-up-enabled": true,
      "start-added-torrents": true
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nftables-config
data:
  nft.rules: |
    table ip filter {
      chain output {
        type filter hook output priority 30; policy drop;
        ct state { established, related } accept
        oifname "tun*" accept
        oifname "lo" accept
        skgid { "nobody" } accept
        ip daddr { 192.168.0.0/16, 10.0.0.0/8 } accept
      }
    }
    ;

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: transmission
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: transmission
  template:
    metadata:
      labels:
        k8s-app: transmission
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      initContainers:
      # /vol/mnt should be fuse mounted by another container
      # Verify that this is mounted before continuing
      - name: wait-mount
        image: busybox:latest
        command:
        - "/bin/mountpoint"
        args:
        - "/vol/mnt"
        volumeMounts:
        - name: torrent-vol
          mountPath: "/vol"
      - name: nftables
        image: randomcoww/nftables:latest
        args: [ "-f", "/etc/nftables/nft.rules" ]
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - name: nftables-config
          mountPath: /etc/nftables/nft.rules
          subPath: nft.rules
      containers:
      - name: openvpn
        image: randomcoww/openvpn:latest
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: PIA_PROFILE
          value: "US Seattle"
        args:
        - "--config \"$(PIA_PROFILE).ovpn\""
        - "--route 192.168.0.0 255.255.0.0 net_gateway"
        - "--route 10.0.0.0 255.0.0.0 net_gateway"
        - "--auth-user-pass /etc/openvpn/auth-user-pass"
        - "--route-nopull"
        - "--redirect-gateway"
        - "--fast-io"
        - "--auth-nocache"
        volumeMounts:
        - mountPath: /etc/openvpn/auth-user-pass
          name: openvpn-auth-user-pass
          subPath: openvpn-auth-user-pass
      - name: transmission
        image: randomcoww/transmission:latest
        imagePullPolicy: Always
        env:
        - name: RESUME_DIR
          value: /transmission/resume
        - name: TORRENTS_DIR
          value: /vol/mnt/torrents
        ports:
        - containerPort: 9091
        volumeMounts:
        - name: transmission-config
          mountPath: /var/lib/transmission/settings.json
          subPath: settings.json
        - name: torrent-vol
          mountPath: "/vol"
      volumes:
      - name: transmission-config
        configMap:
          name: transmission-config
      - name: openvpn-auth-user-pass
        secret:
          secretName: openvpn-auth-user-pass
      - name: nftables-config
        configMap:
          name: nftables-config
      - name: torrent-vol
        persistentVolumeClaim:
          claimName: ingest-pvc

---
kind: Service
apiVersion: v1
metadata:
  name: transmission
spec:
  ports:
  - name: webui
    port: 80
    targetPort: 9091
  selector:
    k8s-app: transmission

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: transmission
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: tr.fuzzybunny.internal
    http:
      paths:
      - path: /
        backend:
          serviceName: transmission
          servicePort: webui
  tls:
  - secretName: internal-tls