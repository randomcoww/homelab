apiVersion: openebs.io/v1alpha1
kind: StoragePool
metadata:
  name: unifi
  type: hostdir
spec:
  path: "/pv/unifi"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: openebs-unifi
  annotations:
    openebs.io/cas-type: jiva
    cas.openebs.io/config: |
      - name: ReplicaCount
        value: "2"
      - name: StoragePool
        value: unifi
provisioner: openebs.io/provisioner-iscsi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: unifi-pvc
spec:
  storageClassName: openebs-unifi
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2G

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: unifi
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: unifi
  template:
    metadata:
      labels:
        k8s-app: unifi
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      initContainers:
      # /vol/mnt should be fuse mounted by another container
      # Verify that this is mounted before continuing
      - name: wait-mount
        image: busybox:latest
        command:
        - "/bin/mountpoint"
        args:
        - "/vol/mnt"
        volumeMounts:
        - name: unifi-backup
          mountPath: "/vol"
      containers:
      # Unifi will restart when restoring a backup.
      # Run this dummy container so that data persists in emptyDir between restarts.
      - name: data-persist
        image: busybox:latest
        args: [ "/bin/sh", "-c", "trap : TERM INT; sleep infinity & wait" ]
        volumeMounts:
        - mountPath: "/opt/UniFi/data"
          name: unifi-data
      - name: unifi
        imagePullPolicy: Always
        image: randomcoww/unifi:5.12.35
        lifecycle:
          preStop:
            exec:
              command:
              - "/docker-stop.sh"
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 3478
          protocol: UDP
        volumeMounts:
        - mountPath: "/opt/UniFi/data"
          name: unifi-data
        - mountPath: "/unifi"
          name: unifi-backup
        env:
        - name: BACKUP_DIR
          value: /unifi/mnt
      volumes:
      - name: unifi-data
        persistentVolumeClaim:
          claimName: unifi-pvc
      - name: unifi-backup
        persistentVolumeClaim:
          claimName: unifi-backup-pvc

---
kind: Service
apiVersion: v1
metadata:
  name: unifi
  annotations:
    metallb.universe.tf/allow-shared-ip: unifi
    external-dns.alpha.kubernetes.io/hostname: unifi.fuzzybunny.internal
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
  - name: https
    port: 8443
  selector:
    k8s-app: unifi

---
kind: Service
apiVersion: v1
metadata:
  name: unifi-stun
  annotations:
    metallb.universe.tf/allow-shared-ip: unifi
spec:
  type: LoadBalancer
  ports:
  - name: stun
    port: 3478
    protocol: UDP
  selector:
    k8s-app: unifi
