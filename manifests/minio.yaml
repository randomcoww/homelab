apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/hostname: worker-0
      volumes:
      - name: s3
        hostPath:
          path: "/var/s3"
          type: DirectoryOrCreate
      containers:
      - name: minio
        env:
        - name: MINIO_STORAGE_CLASS_STANDARD
          value: "EC:2"
        - name: MINIO_STORAGE_CLASS_RRS
          value: "EC:2"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-auth
              key: access_key_id
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-auth
              key: secret_access_key
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: minio/minio
        args:
        - server
        - --address
        - :9000
        - http://$(HOST_IP)/var/s3/0
        - http://$(HOST_IP)/var/s3/1
        - http://$(HOST_IP)/var/s3/2
        - http://$(HOST_IP)/var/s3/3
        - http://$(HOST_IP)/var/s3/4
        - http://$(HOST_IP)/var/s3/5
        - http://$(HOST_IP)/var/s3/6
        - http://$(HOST_IP)/var/s3/7
        - http://$(HOST_IP)/var/s3/8
        - http://$(HOST_IP)/var/s3/9
        - http://$(HOST_IP)/var/s3/10
        - http://$(HOST_IP)/var/s3/11
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: s3
          mountPath: /var/s3
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  clusterIP: None
  ports:
  - port: 9000
  selector:
    app: minio

---
apiVersion: v1
kind: Service
metadata:
  name: minio-ui
spec:
  ports:
  - name: web
    port: 80
    targetPort: 9000
    protocol: TCP
  selector:
    app: minio

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: minio-ui
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: minio.fuzzybunny.internal
    http:
      paths:
      - path: /
        backend:
          serviceName: minio-ui
          servicePort: web
  tls:
  - secretName: internal-tls
