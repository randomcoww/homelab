apiVersion: v1
kind: ConfigMap
metadata:
  name: mpd-config
data:
  mpd.conf: |
    user "mpd"
    bind_to_address "0.0.0.0"
    port "6600"

    music_directory "/mpd/music/mnt"
    playlist_directory "/mpd/cache/mnt/playlists"
    db_file "/mpd/cache/mnt/tag_cache"
    state_file "/mpd/cache/mnt/state"
    sticker_file "/mpd/cache/mnt/sticker.sql"

    filesystem_charset "UTF-8"
    id3v1_encoding "UTF-8"

    audio_output {
      type "httpd"
      name "HTTP FLAC-3"
      encoder "flac"
      compression "3"
      port "8000"
      bind_to_address "0.0.0.0"
      max_clients "0"
    }

    audio_output {
      type "null"
      name "Null Output"
      mixer_type "none"
    }

---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: mpd
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: mpd
  template:
    metadata:
      labels:
        k8s-app: mpd
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      # /vol/mnt should be fuse mounted by another container
      # Verify that this is mounted before continuing
      - name: wait-mount-music
        image: busybox:latest
        command:
        - "/bin/mountpoint"
        args:
        - "/vol/mnt"
        volumeMounts:
        - name: music-data
          mountPath: "/vol"
      - name: wait-mount-mpd
        image: busybox:latest
        command:
        - "/bin/mountpoint"
        args:
        - "/vol/mnt"
        volumeMounts:
        - name: mpd-data
          mountPath: "/vol"
      containers:
      - name: mpd
        image: randomcoww/mpd:latest
        ports:
        - containerPort: 8000
          protocol: TCP
        - containerPort: 6600
          protocol: TCP
        volumeMounts:
        - mountPath: "/mpd/music"
          name: music-data
        - mountPath: "/mpd/cache"
          name: mpd-data
        - mountPath: /etc/mpd.conf
          name: mpd-config
          subPath: mpd.conf
      volumes:
      - name: music-data
        persistentVolumeClaim:
          claimName: music-pvc
      - name: mpd-data
        persistentVolumeClaim:
          claimName: mpd-pvc
      - name: mpd-config
        configMap:
          name: mpd-config

---
kind: Service
apiVersion: v1
metadata:
  name: mpd
  annotations:
    external-dns.alpha.kubernetes.io/hostname: mpd.fuzzybunny.internal
spec:
  type: LoadBalancer
  ports:
  - name: control
    port: 6600
    targetPort: 6600
  selector:
    k8s-app: mpd

---
kind: Service
apiVersion: v1
metadata:
  name: mpd-stream
spec:
  ports:
  - name: stream
    port: 80
    targetPort: 8000
  selector:
    k8s-app: mpd

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mpd-stream
  annotations:
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: stream.fuzzybunny.internal
    http:
      paths:
      - path: /
        backend:
          serviceName: mpd-stream
          servicePort: stream
  tls:
  - secretName: internal-tls