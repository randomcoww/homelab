
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: unifi-pvc
spec:
  storageClassName: openebs-unifi
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2G

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: unifi
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: unifi
  template:
    metadata:
      labels:
        k8s-app: unifi
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      containers:
      - name: rclone
        image: randomcoww/rclone:v1.51.0
        securityContext:
          privileged: true
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-auth
              key: access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-auth
              key: secret_access_key
        args:
        - "mount"
        - ":s3:unifi/"
        - "/vol/mnt"
        - "--s3-provider=Minio"
        - "--s3-env-auth=true"
        - "--s3-region="
        - "--s3-endpoint=http://minio-ui.default.svc.cluster.local:9000"
        - "--allow-other"
        - "--vfs-cache-mode=minimal"
        - "--no-modtime"
        volumeMounts:
        - name: unifi-backup
          mountPath: /vol/mnt
          subPath: mnt
          mountPropagation: Bidirectional
      - name: unifi
        image: randomcoww/unifi:5.12.66
        env:
        - name: BACKUP_DIR
          value: /unifi/mnt
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 3478
          protocol: UDP
        volumeMounts:
        - mountPath: "/opt/UniFi/data"
          name: unifi-data
        - mountPath: "/unifi"
          name: unifi-backup
        lifecycle:
          postStart:
            exec:
              # /unifi/mnt should be fuse mounted by rclone
              # Kill the container if this is not mounted
              command: ["mountpoint", "-q", "/unifi/mnt"]
          preStop:
            exec:
              command: ["/docker-stop.sh"]
      volumes:
      - name: unifi-data
        persistentVolumeClaim:
          claimName: unifi-pvc
      # shared mountpoint for fuse mount
      - name: unifi-backup
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: unifi
  annotations:
    metallb.universe.tf/allow-shared-ip: unifi
    external-dns.alpha.kubernetes.io/hostname: unifi.fuzzybunny.internal
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 8080
  - name: https
    port: 8443
  selector:
    k8s-app: unifi

---
kind: Service
apiVersion: v1
metadata:
  name: unifi-stun
  annotations:
    metallb.universe.tf/allow-shared-ip: unifi
spec:
  type: LoadBalancer
  ports:
  - name: stun
    port: 3478
    protocol: UDP
  selector:
    k8s-app: unifi
