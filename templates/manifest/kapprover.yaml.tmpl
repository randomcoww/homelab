apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubelet-approver
  namespace: ${namespace}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubelet-approver
rules:
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests" ]
  verbs: ["get", "list", "delete", "watch"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval"]
  verbs: ["update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: kubelet-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-approver
subjects:
- kind: ServiceAccount
  name: kubelet-approver
  namespace: ${namespace}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubelet-approver
  namespace: ${namespace}
  labels:
    k8s-app: kubelet-approver
spec:
  replicas: 1
  template:
    metadata:
      name: kubelet-approver
      labels:
        k8s-app: kubelet-approver
    spec:
      serviceAccountName: kubelet-approver
      containers:
      - name: kubelet-approver
        imagePullPolicy: IfNotPresent
        image: ${container_images.kapprover}
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 50Mi