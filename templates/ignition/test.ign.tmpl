---
variant: fcos
version: 1.0.0
storage:
  files:
    - path: /etc/systemd/network/10-${host_network.store.if}.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=${host_network.store.if}

          [DHCP]
          UseMTU=yes

          [Network]
          LinkLocalAddressing=no
          DHCP=yes
          MulticastDNS=yes
    - path: /etc/systemd/network/10-${host_network.int.if}.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=${host_network.int.if}

          [Link]
          ARP=no
          RequiredForOnline=no

          [Network]
          LinkLocalAddressing=no
          DHCP=no
    - path: /etc/systemd/network/50-kube-proxy.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=kube*

          [Link]
          Unmanaged=true
          RequiredForOnline=no
    - path: /etc/systemd/network/50-veth.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=veth*

          [Link]
          Unmanaged=true
          RequiredForOnline=no

    ##
    ## pod config
    ##

    - path: ${pod_mount_path}/coredns/Corefile
      mode: 0644
      contents:
        inline: |-
          ${domains.internal}:53 {
            errors
            forward . ${services.internal_dns.vip}
          }
          ${domains.kubernetes_cluster}:53 {
            errors
            forward . ${services.internal_dns.vip}
          }
          .:53 {
            errors
            health
            forward . tls://${dns_forward_ip} {
              tls_servername ${dns_forward_tls_servername}
              health_check 5s
            }
            prometheus :${services.recursive_dns.ports.prometheus}
            cache 30
            reload
            loadbalance
          }

    ##
    ## pod manifests
    ##

    - path: ${kubelet_path}/manifests/coredns.yaml
      mode: 0644
      contents:
        inline: |-
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            namespace: kube-system
            name: coredns
          spec:
            restartPolicy: Always
            hostNetwork: true
            dnsPolicy: Default
            containers:
            - name: coredns
              image: "${container_images.coredns}"
              resources:
                limits:
                  memory: 170Mi
                requests:
                  cpu: 100m
                  memory: 70Mi
              args: [ "-conf", "/etc/coredns/Corefile" ]
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 15
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 5
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                  - NET_BIND_SERVICE
                  drop:
                  - all
                readOnlyRootFilesystem: true
              volumeMounts:
              - name: config-volume
                mountPath: /etc/coredns/Corefile
                readOnly: true
            volumes:
            - name: config-volume
              hostPath:
                path: ${pod_mount_path}/coredns/Corefile