<domain type='kvm'>
  <name>${name}</name>
  <memory unit='GiB'>${memory}</memory>
  <currentMemory unit='GiB'>${memory}</currentMemory>
  <vcpu placement='static'>${vcpu}</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
  </os>
  <features>
    <acpi/>
    <apic/>
    <pae/>
    <vmport state='off'/>
  </features>
  <cpu mode='host-passthrough'>
    <topology sockets='1' cores='${vcpu}' threads='1'/>
    <cache level='3' mode='emulate'/>
  </cpu>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    <controller type='usb' model='none'/>
    %{~ for k in disk ~}
    <disk type='block' device='disk'>
      <driver name='qemu' type='raw' cache='none' io='native' discard='unmap'/>
      <source dev='${k.source}'/>
      <target dev='${k.target}' bus='virtio'/>
    </disk>
    %{~ endfor ~}
    %{~ for k in network ~}
    <interface type='direct' trustGuestRxFilters='yes'>
      <source dev='${k.if}' mode='bridge'/>
      %{~ if lookup(k, "mac", null) != null ~}
      <mac address='${k.mac}'/>
      %{~ endif ~}
      %{~ if lookup(k, "bootorder", null) != null ~}
      <boot order='${k.bootorder}'/>
      %{~ endif ~}
      <model type='virtio-net'/>
    </interface>
    %{~ endfor ~}
    %{~ for k in hostdev ~}
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <driver name='vfio'/>
      <source>
        <address domain='${k.domain}' bus='${k.bus}' slot='${k.slot}' function='${k.function}'/>
      </source>
      %{~ if lookup(k, "rom", null) != null ~}
      <rom bar='on' file='${k.rom}'/>
      %{~ endif ~}
    </hostdev>
    %{~ endfor ~}
    <console>
      <target type='virtio'/>
    </console>
    <channel type='spicevmc'>
      <target type='virtio' name='com.redhat.spice.0'/>
      <address type='virtio-serial'/>
    </channel>
    <memballoon model='virtio'/>
    <rng model='virtio'>
      <backend model='random'>/dev/urandom</backend>
    </rng>
  </devices>
</domain>
