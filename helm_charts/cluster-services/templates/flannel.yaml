{{- $fullName := "flannel" -}}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
    chart: {{ template "cluster-services.chart" . }}
    release: "{{ .Release.Name }}"
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "watch"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
    chart: {{ template "cluster-services.chart" . }}
    release: "{{ .Release.Name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $fullName }}
subjects:
- kind: ServiceAccount
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
    chart: {{ template "cluster-services.chart" . }}
    release: "{{ .Release.Name }}"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
    chart: {{ template "cluster-services.chart" . }}
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      app: {{ $fullName }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $fullName }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/flannel-configmap.yaml") . | sha256sum }}
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccountName: {{ $fullName }}
      tolerations:
      - operator: Exists
        effect: NoExecute
      - operator: Exists
        effect: NoSchedule
      initContainers:
      - name: {{ $fullName }}-cni-plugin
        image: {{ .Values.images.flannelCNIPlugin }}
        command:
        - cp
        args:
        - -f
        - /flannel
        - /opt/cni/bin/flannel
        volumeMounts:
        - name: cni-plugin
          mountPath: /opt/cni/bin
      - name: {{ $fullName }}-install-cni
        image: {{ .Values.images.flannel }}
        command:
        - cp
        args:
        - -f
        - /etc/kube-flannel/cni-conf.json
        - /etc/cni/net.d/10-flannel.conflist
        volumeMounts:
        - name: cni
          mountPath: /etc/cni/net.d
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
      containers:
      - name: {{ $fullName }}
        image: {{ .Values.images.flannel }}
        command:
        - /opt/bin/flanneld
        args:
        - --ip-masq
        - --kube-subnet-mgr
        - --iface=$(NODE_IP)
        - --public-ip=$(NODE_IP)
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: run
          mountPath: /run/flannel
        - name: flannel-cfg
          mountPath: /etc/kube-flannel/
        - name: xtables-lock
          mountPath: /run/xtables.lock
      volumes:
      - name: cni-plugin
        hostPath:
          path: /opt/cni/bin
      - name: run
        hostPath:
          path: /run/flannel
      - name: cni
        hostPath:
          path: /etc/cni/net.d
      - name: flannel-cfg
        configMap:
          name: flannel
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate