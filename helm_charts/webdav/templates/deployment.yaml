apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "webdav.fullname" . }}
  labels:
    app: {{ template "webdav.name" . }}
    chart: {{ template "webdav.chart" . }}
    release: "{{ .Release.Name }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ template "webdav.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "webdav.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      restartPolicy: Always
      containers:
      {{- range $minioBucket := .Values.minioBuckets }}
      - name: {{ $.Chart.Name }}-{{ $minioBucket.name }}
        image: {{ $.Values.images.rclone }}
        args:
        - "serve"
        - "webdav"
        - "--addr=0.0.0.0:{{ $minioBucket.port }}"
        - ":s3:{{ $minioBucket.name }}"
        - "--s3-provider=Minio"
        - "--s3-endpoint={{ $.Values.minioEndPoint }}"
        - "--no-modtime"
        - "--read-only"
        ports:
        - containerPort: {{ $minioBucket.port }}
      {{- end }}
