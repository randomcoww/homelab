apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app: {{ .Chart.Name }}
spec:
  serviceName: {{ .Chart.Name }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  minReadySeconds: {{ .Values.rollingUpdateWaitSeconds }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      initContainers:
      - name: {{ .Values.syncthing.podName }}-init
        image: {{ .Values.syncthing.image }}
        command:
        - cp
        - /tmp/config.xml
        - /tmp/cert.pem
        - /tmp/key.pem
        - {{ .Values.syncthing.homePath }}/
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: syncthing-config
          mountPath: /tmp/config.xml
          subPath: config.xml
        - name: syncthing-tls
          mountPath: /tmp/cert.pem
          subPathExpr: cert-$(POD_NAME)
        - name: syncthing-tls
          mountPath: /tmp/key.pem
          subPathExpr: key-$(POD_NAME)
        - name: syncthing-home
          mountPath: {{ .Values.syncthing.homePath }}
      containers:
      - name: {{ .Values.syncthing.podName }}
        image: {{ .Values.syncthing.image }}
        command:
        - syncthing
        args:
        - --home
        - {{ .Values.syncthing.homePath }}
        volumeMounts:
        - name: syncthing-home
          mountPath: {{ .Values.syncthing.homePath }}
        - name: data
          mountPath: {{ .Values.syncthing.dataPath }}
        ports:
        - name: syncthing-peer
          containerPort: {{ .Values.syncthing.peerPort }}
      - name: mpd
        imagePullPolicy: Always
        image: {{ .Values.mpd.image }}
        volumeMounts:
        - name: mpd-config
          mountPath: /etc/mpd.conf
          subPath: mpd.conf
        - name: data
          mountPath: {{ .Values.mpd.cachePath }}
        ports:
        - containerPort: {{ .Values.mpd.streamPort }}
      - name: ympd
        imagePullPolicy: Always
        image: {{ .Values.ympd.image }}
        args: ["-h", "127.0.0.1", "-p", "{{ .Values.mpd.controlPort }}", "-w", "{{ .Values.ympd.httpPort }}"]
        ports:
        - containerPort: {{ .Values.ympd.httpPort }}
      - name: rclone
        imagePullPolicy: Always
        image: {{ .Values.rclone.image }}
        args:
        - serve
        - webdav
        - --addr=127.0.0.1:{{ .Values.rclone.webDavPort }}
        - :s3:{{ .Values.minioBucket }}
        - --s3-provider=Minio
        - --s3-endpoint={{ .Values.minioEndPoint }}
        - --no-modtime
        - --read-only
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      volumes:
      - name: syncthing-home
        emptyDir: {}
      - name: syncthing-config
        configMap:
          name: {{ .Chart.Name }}-{{ .Values.syncthing.podName }}
      - name: syncthing-tls
        secret:
          secretName: {{ .Chart.Name }}-{{ .Values.syncthing.podName }}
      - name: mpd-config
        configMap:
          name: mpd
      - name: data
        emptyDir: {}