apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "code.fullname" . }}
  labels:
    app: {{ template "code.name" . }}
    chart: {{ template "code.chart" . }}
    release: "{{ .Release.Name }}"
spec:
  serviceName: {{ template "code.fullname" . }}
  # Only supports 1 replica
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "code.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "code.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      restartPolicy: Always
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.images.code }}
        env:
        - name: USER
          value: {{ .Values.user }}
        - name: HOME
          value: /home/{{ .Values.user }}
        - name: UID
          value: {{ .Values.uid | quote }}
        - name: CODE_PORT
          value: {{ .Values.ports.code | quote }}
        {{- range $k, $v := .Values.code.additionalEnvs }}
        - name: {{ $k }}
          value: {{ join "," $v | quote }}
        {{- end }}
        volumeMounts:
        - name: code-home
          mountPath: /home/{{ .Values.user }}
        - name: secret
          mountPath: /etc/ssh/ssh_known_hosts
          subPathExpr: ssh_known_hosts
          readOnly: true
        ports:
        - containerPort: {{ .Values.ports.code }}
        securityContext:
          capabilities:
            add:
            - AUDIT_WRITE
      {{- with .Values.code.resources }}
        resources:
{{ toYaml . | indent 10 }}
      {{- end }}
      - name: {{ .Chart.Name }}-tailscale
        image: {{ .Values.images.tailscale }}
        securityContext:
          privileged: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- range $k, $v := .Values.tailscale.additionalEnvs }}
        - name: {{ $k }}
          value: {{ join "," $v | quote }}
        {{- end }}
        - name: TS_STATE_DIR
          value: "/var/lib/tailscale"
        - name: KUBERNETES_SERVICE_HOST
          value: ""
        - name: TS_KUBE_SECRET
          value: ""
        - name: TS_USERSPACE
          value: "false"
        - name: TS_TAILSCALED_EXTRA_ARGS
          value: "--state=arn:aws:ssm:{{ .Values.tailscale.ssm.awsRegion }}::parameter/{{ .Values.tailscale.ssm.resource }}/$(POD_NAME)"
        - name: TS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "code.fullname" . }}
              key: TS_AUTHKEY
        - name : AWS_REGION
          valueFrom:
            secretKeyRef:
              name: {{ template "code.fullname" . }}
              key: AWS_REGION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "code.fullname" . }}
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "code.fullname" . }}
              key: AWS_SECRET_ACCESS_KEY
      volumes:
      - name: secret
        secret:
          secretName: {{ template "code.fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: code-home
    {{- if .Values.persistence.annotations }}
      annotations:
{{ toYaml .Values.persistence.annotations | trimSuffix "\n" | indent 8 }}
    {{- end }}
    spec:
      accessModes:
      - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}