apiVersion: v1
kind: ConfigMap
metadata:
  name: mpd
  labels:
    app: mpd
data:
  mpd.conf: |
    user "mpd"
    bind_to_address "127.0.0.1"
    port "6600"
    music_directory "http://127.0.0.1:58080/"
    playlist_directory "/mpd/cache/playlists"
    db_file "/mpd/cache/tag_cache"
    state_file "/mpd/cache/state"
    sticker_file "/mpd/cache/sticker.sql"
    filesystem_charset "UTF-8"
    resampler {
      plugin "soxr"
      threads "0"
      quality "very high"
    }
    audio_output {
      type "httpd"
      name "HTTP FLAC-3"
      tags "yes"
      format "48000:24:2"
      always_on "yes"
      encoder "flac"
      compression "3"
      port "8000"
      bind_to_address "0.0.0.0"
      max_clients "0"
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mpd
  labels:
    app: mpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mpd
  template:
    metadata:
      labels:
        app: mpd
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      containers:
      - name: mpd
        imagePullPolicy: Always
        image: ghcr.io/randomcoww/mpd:0.23.7
        volumeMounts:
        - name: mpd-config
          mountPath: /etc/mpd.conf
          subPath: mpd.conf
        - name: mpd-cache
          mountPath: /mpd/cache
        ports:
        - containerPort: 8000
      - name: ympd
        imagePullPolicy: Always
        image: ghcr.io/randomcoww/ympd:latest
        args: ["-h", "127.0.0.1", "-p", "6600", "-w", "8080"]
        ports:
        - containerPort: 8080
      - name: rclone
        imagePullPolicy: Always
        image: docker.io/rclone/rclone:latest
        args:
        - serve
        - webdav
        - --addr
        - localhost:58080
        - :s3:music
        - --s3-provider=Minio
        - --s3-endpoint=http://minio.default:9000
        - --no-modtime
        - --read-only
      volumes:
      - name: mpd-config
        configMap:
          name: mpd
      - name: mpd-cache
        emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: mpd
  labels:
    app: mpd
spec:
  type: ClusterIP
  ports:
  - name: stream
    port: 8000
  - name: ympd
    port: 8080
  selector:
    app: mpd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: mpd
  name: mpd
spec:
  ingressClassName: nginx
  rules:
  - host: mpd.fuzzybunny.internal
    http:
      paths:
      - backend:
          service:
            name: mpd
            port:
              name: ympd
        path: /
        pathType: Prefix
  - host: s.fuzzybunny.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mpd
            port:
              name: stream
