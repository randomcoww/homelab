apiVersion: v1
kind: ConfigMap
metadata:
  name: mpd-config
  namespace: default
data:
  mpd.conf: |
    user "mpd"
    bind_to_address "127.0.0.1"
    port "6600"
    music_directory "/mpd/music"
    playlist_directory "/mpd/cache/playlists"
    db_file "/mpd/cache/tag_cache"
    state_file "/mpd/cache/state"
    sticker_file "/mpd/cache/sticker.sql"
    filesystem_charset "UTF-8"
    resampler {
      plugin "soxr"
      threads "0"
      quality "very high"
    }
    audio_output {
      type "httpd"
      name "HTTP FLAC-3"
      tags "yes"
      format "48000:32:2"
      always_on "yes"
      encoder "flac"
      compression "3"
      port "8000"
      bind_to_address "0.0.0.0"
      max_clients "0"
    }
    audio_output {
      type "httpd"
      name "HTTP lossy"
      encoder "vorbis"
      port "8001"
      tags "yes"
      format "44100:16:2"
      always_on "yes"
    }

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mpd
  namespace: default
spec:
  serviceName: mpd
  replicas: 1
  selector:
    matchLabels:
      app: mpd
  template:
    metadata:
      labels:
        app: mpd
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      containers:
      - name: mount-data
        imagePullPolicy: Always
        image: rclone/rclone:latest
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","umount -f /mpd/music"]
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
        args:
        - "mount"
        - ":s3:music/"
        - "/mpd/music"
        - "--s3-provider=Minio"
        - "--s3-endpoint=http://minio-0.minio.default.svc:50256"
        - "--allow-other"
        - "--allow-non-empty"
        - "--vfs-cache-mode=off"
        - "--no-modtime"
        - "--read-only"
        volumeMounts:
        - name: devfuse
          mountPath: /dev/fuse
        - name: mpd-data
          mountPath: /mpd/music
          mountPropagation: Bidirectional
      - name: mpd
        imagePullPolicy: Always
        image: ghcr.io/randomcoww/mpd:0.23.5
        ports:
        - containerPort: 8000
          protocol: TCP
        - containerPort: 8001
          protocol: TCP
        volumeMounts:
        - name: mpd-config
          mountPath: /etc/mpd.conf
          subPath: mpd.conf
        - name: mpd-cache
          mountPath: /mpd/cache
        - name: mpd-data
          mountPath: /mpd/music
          mountPropagation: HostToContainer
      - name: ympd
        imagePullPolicy: Always
        image: ghcr.io/randomcoww/ympd:latest
        args: ["-h", "127.0.0.1", "-p", "6600", "-w", "8080"]
        ports:
        - containerPort: 8080
          protocol: TCP
      volumes:
      - name: mpd-config
        configMap:
          name: mpd-config
      - name: mpd-cache
        hostPath:
          path: /var/pv/sync/mpd
      - name: mpd-data
        hostPath:
          path: /tmp/mpd-data
      - name: devfuse
        hostPath:
          path: /dev/fuse

---
kind: Service
apiVersion: v1
metadata:
  name: mpd
  namespace: default
spec:
  ports:
  - name: flac
    port: 8000
  - name: lossy
    port: 8001
  - name: control
    port: 8080
  selector:
    app: mpd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mpd
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: mpd.fuzzybunny.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mpd
            port:
              name: control
  - host: s.fuzzybunny.internal
    http:
      paths:
      - path: /flac
        pathType: Prefix
        backend:
          service:
            name: mpd
            port:
              name: flac
      - path: /lossy
        pathType: Prefix
        backend:
          service:
            name: mpd
            port:
              name: lossy