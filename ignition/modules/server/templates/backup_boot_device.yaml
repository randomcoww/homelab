---
variant: fcos
version: ${butane_version}
systemd:
  units:
    - name: generate-backup-boot-device.service
      enabled: true
      contents: |
        [Unit]
        ConditionKernelCommandLine=coreos.live.rootfs_url

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/systemd-inhibit --what=sleep:shutdown:idle \
          generate-backup-boot-device.sh
        RestartSec=8

        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /usr/local/bin/generate-backup-boot-device.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          set -xe -o pipefail
          mkdir -p ${backup_bind_mount_path}

          cleanup() {
            if mountpoint -q ${backup_bind_mount_path}; then
              sync
              umount ${backup_bind_mount_path}
            fi
            rmdir ${backup_bind_mount_path}

            if [ -f ${backup_temp_image_path} ]; then
              sync
              rm ${backup_temp_image_path}
            fi
          }
          trap cleanup EXIT

          image_url=$(xargs -n1 -a /proc/cmdline | grep ^coreos.live.rootfs_url= | sed -r 's/coreos.live.rootfs_url=(.*)-rootfs(.*)\.img$/\1-iso\2.iso/')
          if [ -z "$image_url" ]; then
            exit 1
          fi
          disk=$(lsblk -ndo kname /dev/disk/by-id/usb-* | head -1)
          if [ -z "$disk" ]; then
            exit 1
          fi

          # Compare image version
          backup_label=$(blkid /dev/$disk -s LABEL -o value)
          current_label=$(cat /proc/cmdline | awk '{print $1}' | sed -r 's/-live-kernel.*//')
          if [ "$backup_label" != "$current_label" ]; then
            curl -L -s $image_url --output ${backup_temp_image_path}
            cat /run/ignition.json | coreos-installer iso ignition embed ${backup_temp_image_path}

            dd if=${backup_temp_image_path} of=/dev/$disk bs=4M
            exit 0
          fi

          # Compare ignition
          bindfs --block-devices-as-files /dev ${backup_bind_mount_path}
          backup_ign=$(coreos-installer iso ignition show ${backup_bind_mount_path}/$disk | sha256sum | awk '{print $1}')
          current_ign=$(cat /run/ignition.json | sha256sum | awk '{print $1}')
          if [ "$backup_ign" != "$current_ign" ]; then
            cat /run/ignition.json | coreos-installer iso ignition embed ${backup_bind_mount_path}/$disk -f
          fi