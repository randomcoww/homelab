---
variant: fcos
version: ${ignition_version}
systemd:
  units:
    - name: crio.service
      enabled: true
      dropins:
        - name: 10-local-fs-wait.conf
          contents: |
            [Unit]
            Wants=local-fs.target
            After=local-fs.target
    - name: kubelet.service
      enabled: true
      dropins:
        - name: 20-bootstrap-worker.conf
          contents: |
            [Unit]
            Wants=crio.service
            After=crio.service
            Wants=local-fs.target
            After=local-fs.target

            [Service]
            ExecStartPre=/usr/bin/mkdir -p \
              ${kubelet_root_path} \
              ${static_pod_path}
            ExecStart=
            ExecStart=/usr/bin/kubelet \
              --exit-on-lock-contention \
              --lock-file=/var/run/lock/kubelet.lock \
              --node-ip=${node_ip} \
              --cert-dir=${config_path} \
              --root-dir=${kubelet_root_path} \
              --bootstrap-kubeconfig=${bootstrap_kubeconfig_path} \
              --config=${kubelet_config_path} \
              --kubeconfig=${kubeconfig_path} \
              --v=2
    - name: nftables@${name}.service
      enabled: true
    - name: bird.service
      enabled: true
      dropins:
        - name: 20-kubelet-dependency.conf
          contents: |
            [Unit]
            WantedBy=kubelet.service
            Before=kubelet.service

storage:
  files:
    # TODO: limit access
    - path: /etc/nftables/${name}.nft
      mode: 0644
      overwrite: true
      contents:
        inline: |
          table inet ${name} {
            chain mark-for-accept {
              meta mark set meta mark | ${fw_mark}
            }

            chain input {
              type filter hook input priority 0; policy accept;
              tcp dport ${ports.kubelet} jump mark-for-accept;
              ip saddr ${kubernetes_pod_prefix} jump mark-for-accept;
              ip saddr ${node_prefix} jump mark-for-accept;
              ip daddr ${node_prefix} jump mark-for-accept;
            }

            chain forward {
              type filter hook forward priority 0; policy accept;
              ip saddr ${kubernetes_pod_prefix} jump mark-for-accept;
              ip saddr ${node_prefix} jump mark-for-accept;
              ip daddr ${node_prefix} jump mark-for-accept;
            }
          }
          ;
    # nf_call_iptables disabled gloablly except for CNI #
    - path: /etc/udev/rules.d/10-cni-nf-call-iptables.rules
      mode: 0644
      contents:
        inline: |
          SUBSYSTEM=="net", ACTION=="add", KERNEL=="${cni_bridge_interface_name}", ATTR{bridge/nf_call_iptables}="1"
    # inhibit shutdown for graceful node shutdown
    - path: /etc/systemd/logind.conf.d/10-kubelet-graceful-shutdown.conf
      mode: 0644
      contents:
        inline: |
          [Login]
          InhibitDelayMaxSec=${graceful_shutdown_delay}
    # kube-proxy #
    - path: /etc/modules-load.d/20-kube-proxy.conf
      mode: 0644
      contents:
        inline: |
          ip_vs
    - path: /etc/crio/crio.conf.d/10-custom.conf
      mode: 0644
      contents:
        inline: |
          [crio]
          root="${container_storage_path}"

          [crio.api]
          listen="${crio_socket}"

          [crio.image]
          big_files_temporary_dir="${container_storage_path}"

          [crio.runtime]
          default_runtime="crun"
          selinux=true

          [crio.runtime.runtimes.crun]
          runtime_path="/usr/bin/crun"

          [crio.network]
          plugin_dirs=["/usr/libexec/cni","/opt/cni/bin"]

          [crio.metrics]
          enable_metrics=false

          [crio.tracing]
          enable_tracing=false
    # clickhouse DB
    - path: /etc/sysctl.d/99-clickhouse.conf
      mode: 0644
      contents:
        inline: |
          kernel.task_delayacct=1
    # needed if bridging wlan
    - path: /etc/sysctl.d/99-bridge-iptables.conf
      mode: 0644
      contents:
        inline: |
          net.bridge.bridge-nf-call-iptables=0