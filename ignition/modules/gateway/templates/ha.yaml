---
variant: fcos
version: ${ignition_version}
systemd:
  units:
    - name: nftables@gateway.service
      enabled: true

storage:
  files:
    # https://blog.fhrnet.eu/2019/03/07/ecmp-on-linux/
    - path: /etc/sysctl.d/20-gateway.conf
      mode: 0644
      contents:
        inline: |
          net.ipv4.ip_forward=1
          net.ipv4.conf.all.ignore_routes_with_linkdown=1
          net.ipv4.fib_multipath_use_neigh=1
    - path: /etc/nftables/gateway.nft
      mode: 0644
      overwrite: true
      contents:
        inline: |
          table inet gateway {
            chain mark-for-accept {
              meta mark set meta mark | ${fw_mark}
            }

            chain input {
              type filter hook input priority -10; policy accept;
              iifname ${wan_interface_name} meta mark & ${fw_mark} == 0x00000000 drop;
              iifname ${sync_interface_name} pkttype multicast jump mark-for-accept;
            }

            chain forward {
              type filter hook forward priority 0; policy accept;
              oifname ${wan_interface_name} jump mark-for-accept;
            }

            chain postrouting {
              type nat hook postrouting priority srcnat + 20; policy accept;
              oifname ${wan_interface_name} masquerade;
            }
          }
          ;

    - path: ${keepalived_path}/gateway.conf
      mode: 0644
      contents:
        inline: |
          vrrp_instance gateway {
            preempt
            no_accept
            state BACKUP
            advert_int 0.1
            virtual_router_id ${virtual_router_id}
            interface ${lan_interface_name}
            use_vmac
            vmac_xmit_base
            priority 250
            garp_master_delay 0
            garp_master_refresh 8
            virtual_ipaddress {
              ${lan_gateway_ip}
              0.0.0.0 dev ${wan_interface_name} no_track
            }
            virtual_rules {
              to all lookup ${vrrp_master_default_route.table_id} priority ${vrrp_master_default_route.table_priority}
              to ${lan_prefix} lookup main priority ${master_lan_route_priority}
            }
          }

    # Create fallback route so backup node can access the internet through the wan interface
    - path: /etc/systemd/network/20-${wan_interface_name}.network.d/20-master-default-route.conf
      mode: 0644
      contents:
        inline: |
          [DHCPv4]
          RequestBroadcast=true
          ClientIdentifier=mac
          RouteTable=${vrrp_master_default_route.table_id}
          UseTimezone=false
    - path: /etc/systemd/network/20-${lan_interface_name}.network.d/20-slave-default-route.conf
      mode: 0644
      contents:
        inline: |
          [Route]
          Scope=global
          Gateway=${lan_gateway_ip}
          GatewayOnLink=true
          Destination=0.0.0.0/0
          Table=${vrrp_slave_default_route.table_id}

          [RoutingPolicyRule]
          Table=${vrrp_slave_default_route.table_id}
          Priority=${vrrp_slave_default_route.table_priority}
    - path: ${bird_path}/gateway.conf
      mode: 0644
      contents:
        inline: |
          router id ${cidrhost(lan_prefix, host_netnum)};
          protocol device {
          }

          protocol direct {
            disabled;
          }

          protocol kernel {
            learn;
            merge paths;
            ipv4 {
              export all;
            };
          }

          protocol bfd {
          }

          protocol bgp apiserver {
            router id ${cidrhost(lan_prefix, host_netnum)};
            local ${cidrhost(lan_prefix, host_netnum)} as ${bgp_as};
            neighbor range ${lan_prefix} as ${bgp_peeras};
            source address ${cidrhost(lan_prefix, host_netnum)};
            bfd;
            ipv4 {
              import all;
              export all;
            };
          }