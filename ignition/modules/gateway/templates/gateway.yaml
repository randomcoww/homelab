---
variant: fcos
version: ${butane_version}
systemd:
  units:
    - name: nftables@gateway.service
      enabled: true
    - name: conntrackd.service
      enabled: true
storage:
  files:
    # https://blog.fhrnet.eu/2019/03/07/ecmp-on-linux/
    - path: /etc/sysctl.d/20-gateway.conf
      mode: 0644
      contents:
        inline: |
          net.ipv4.ip_forward=1
    - path: /etc/nftables/gateway.nft
      mode: 0644
      overwrite: true
      contents:
        inline: |
          table inet gateway {
            chain mark-for-accept {
              meta mark set meta mark | ${fw_mark}
            }

            chain input {
              type filter hook input priority -10; policy accept;
              iifname ${wan_interface_name} meta mark & ${fw_mark} == 0x00000000 drop;
              iifname ${sync_interface_name} pkttype multicast jump mark-for-accept;
            }

            chain forward {
              type filter hook forward priority 0; policy accept;
              oifname ${wan_interface_name} jump mark-for-accept;
            }

            chain postrouting {
              type nat hook postrouting priority srcnat + 20; policy accept;
              oifname ${wan_interface_name} masquerade;
            }
          }
          ;

    - path: ${keepalived_path}/gateway.conf
      mode: 0644
      contents:
        inline: |
          vrrp_instance gateway {
            preempt
            state BACKUP
            advert_int 0.4
            virtual_router_id ${keepalived_router_id}
            interface ${sync_interface_name}
            no_accept
            vmac_xmit_base
            priority 100
            virtual_ipaddress {
              ${keepalived_vip} dev ${keepalived_interface_name} use_vmac
            }
            virtual_rules {
              to all lookup ${master_default_route.table_id} priority ${master_default_route.table_priority}
            }
            virtual_routes {
              default dev ${keepalived_interface_name} table ${slave_default_route.table_id}
            }
          }
    # bird
    - path: ${bird_path}/gateway.conf
      mode: 0644
      contents:
        inline: |
          protocol kernel gateway_kernel {
            learn;
            kernel table ${slave_default_route.table_id};
            ipv4 {
              import all;
              export none;
              table ${bird_cache_table_name};
            };
          }
          %{~ for host_key, netnum in bgp_neighbor_netnums ~}
          protocol bgp ${replace(host_key, "-", "_")} {
            debug all;
            source address ${cidrhost(node_prefix, host_netnum)};
            local port ${bgp_port} as ${bgp_as_members};
            neighbor ${cidrhost(node_prefix, netnum)} port ${bgp_port} internal;
            direct;
            bfd {
            };
            ipv4 {
              import all;
              export all;
              table ${bird_cache_table_name};
            };
          }
          %{~ endfor ~}
          protocol bgp node {
            debug all;
            source address ${cidrhost(node_prefix, host_netnum)};
            local port ${bgp_port} as ${bgp_as};
            neighbor range ${node_prefix} port ${bgp_port} internal;
            direct;
            bfd {
            };
            ipv4 {
              import all;
              export all;
              table ${bird_cache_table_name};
            };
          }
          protocol bgp service {
            debug all;
            source address ${cidrhost(service_prefix, host_netnum)};
            local port ${bgp_port} as ${bgp_as};
            neighbor range ${service_prefix} port ${bgp_port} internal;
            direct;
            bfd {
            };
            ipv4 {
              import all;
              export all;
            };
          }
    # Create fallback route so backup node can access the internet through the wan interface
    - path: /etc/systemd/network/20-${wan_interface_name}.network.d/20-master-default-route.conf
      mode: 0644
      contents:
        inline: |
          [DHCPv4]
          RequestBroadcast=true
          ClientIdentifier=mac
          RouteTable=${master_default_route.table_id}
          UseTimezone=false
    - path: /etc/conntrackd/conntrackd.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          Sync {
            Mode FTFW {
              DisableExternalCache on
              PurgeTimeout 5
              StartupResync on
            }
            Multicast {
              IPv4_address 225.0.0.50
              Group 3780
              IPv4_interface ${cidrhost(sync_prefix, host_netnum)}
              Interface ${sync_interface_name}
              SndSocketBuffer 24985600
              RcvSocketBuffer 24985600
              Checksum on
            }
          }
          General {
            Systemd on
            HashSize 32768
            HashLimit 131072
            LockFile /var/lock/conntrack.lock
            UNIX {
              Path /var/run/conntrackd.ctl
            }
            NetlinkBufferSize 2097152
            NetlinkBufferSizeMaxGrowth 8388608
            Filter From Userspace {
              Protocol Accept {
                TCP
              }
              Address Ignore {
                IPv4_address 127.0.0.1
                IPv6_address ::1
                %{~ for _, address in conntrackd_ignore_ipv4 ~}
                IPv4_address ${address}
                %{~ endfor ~}
              }
            }
          }