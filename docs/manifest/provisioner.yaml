---
apiVersion: v1
kind: PodList
items:
- apiVersion: v1
  kind: Pod
  metadata:
    name: nftables
  spec:
    restartPolicy: OnFailure
    hostNetwork: true
    containers:
    - name: nftables
      image: randomcoww/nftables:20180913.01
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      env:
      - name: NFTABLES_LOCAL_CONFIG
        value: |
          define if_internal = { eth0, eth1 }
          define if_external = eth2
          define if_trusted = eth1

          table ip filter {
            chain base_checks {
              ct state {established, related} accept;
              ct state invalid drop;
            }

            set tcp_fwd {
              type inet_service; flags interval;
              elements = {
                ssh,
                sunrpc,nfs
              }
            }

            set udp_fwd {
              type inet_service; flags interval;
              elements = {
                sunrpc,nfs
              }
            }

            chain input {
              type filter hook input priority 0; policy drop;

              jump base_checks;

              iifname "lo" accept;
              iifname != "lo" ip daddr 127.0.0.1/8 drop;

              ip protocol icmp icmp type { echo-request, echo-reply, time-exceeded, parameter-problem, destination-unreachable } accept;

              iifname $if_trusted accept;

              iifname $if_internal tcp dport domain accept;
              iifname $if_internal udp dport domain accept;
              iifname $if_internal udp sport bootps udp dport bootpc accept;
              iifname $if_internal pkttype multicast accept;
              iifname $if_internal tcp dport ssh accept;
            }

            chain forward {
              type filter hook forward priority 0; policy drop;

              jump base_checks;

              ip protocol icmp icmp type { echo-request, echo-reply, time-exceeded, parameter-problem, destination-unreachable } accept;

              iifname $if_trusted accept;
              iifname $if_internal oifname $if_external accept;

              iifname $if_internal tcp dport @tcp_fwd accept;
              iifname $if_internal udp dport @udp_fwd accept;

              iifname $if_internal ip daddr 192.168.126.245 accept;
              iifname $if_internal ip daddr 192.168.127.128/25 accept;

              ip daddr 192.168.126.245 ct status dnat accept;
            }

            chain output {
              type filter hook output priority 100; policy accept;
            }
          }

          table ip nat {
            set tcp_dnat {
              type inet_service; flags interval;
              elements = {
                2222
              }
            }

            chain prerouting {
              type nat hook prerouting priority 0; policy accept;
              tcp dport @tcp_dnat dnat 192.168.126.245;
            }

            chain input {
              type nat hook input priority 0; policy accept;
            }

            chain output {
              type nat hook output priority 0; policy accept;
            }

            chain postrouting {
              type nat hook postrouting priority 100; policy accept;
              oifname $if_external masquerade;
            }
          }
          ;
- apiVersion: v1
  kind: Pod
  metadata:
    name: kea
  spec:
    restartPolicy: Always
    hostNetwork: true
    containers:
    - name: kea-control-agent
      image: randomcoww/kea:1.4.0-P1
      args:
      - kea-ctrl-agent
      env:
      - name: KEA_LOCAL_CONFIG
        value: |-
          {
            "Control-agent": {
              "http-host": "0.0.0.0",
              "http-port": 58082,
              "control-sockets": {
                "dhcp4": {
                  "socket-type": "unix",
                  "socket-name": "/var/lib/kea/kea-dhcp4-ctrl.sock"
                }
              }
            }
          }
      volumeMounts:
      - name: kea-path
        mountPath: "/var/lib/kea"
        readOnly: false
    - name: kea-dhcp4
      image: randomcoww/kea:1.4.0-P1
      args:
      - kea-dhcp4
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: KEA_LOCAL_CONFIG
        value: |-
          {
            "Dhcp4": {
              "valid-lifetime": 1200,
              "renew-timer": 1200,
              "rebind-timer": 1200,
              "interfaces-config": {
                "interfaces": [
                  "*"
                ]
              },
              "control-socket": {
                "socket-type": "unix",
                "socket-name": "/var/lib/kea/kea-dhcp4-ctrl.sock"
              },
              "lease-database": {
                "type": "memfile",
                "name": "/var/lib/kea/dhcp4.leases",
                "persist": true
              },
              "option-data": [
                {
                  "name": "domain-name-servers",
                  "data": "192.168.127.254,9.9.9.9",
                  "csv-format": true
                },
                {
                  "name": "domain-name",
                  "data": "host.internal"
                }
              ],
              "client-classes": [
                {
                  "name": "ipxe_detected",
                  "test": "substring(option[77].hex,0,4) == 'iPXE'",
                  "boot-file-name": "http://192.168.126.242:58080/boot.ipxe"
                },
                {
                  "name": "ipxe",
                  "test": "not(substring(option[77].hex,0,4) == 'iPXE') and (option[93].hex == 0x0000)",
                  "next-server": "192.168.126.242",
                  "boot-file-name": "/undionly.kpxe"
                },
                {
                  "name": "ipxe_efi",
                  "test": "not(substring(option[77].hex,0,4) == 'iPXE') and (option[93].hex == 0x0007)",
                  "next-server": "192.168.126.242",
                  "boot-file-name": "/ipxe.efi"
                }
              ],
              "hooks-libraries": [
                {
                  "library": "/usr/local/lib/hooks/libdhcp_lease_cmds.so",
                  "parameters": {}
                },
                {
                  "library": "/usr/local/lib/hooks/libdhcp_ha.so",
                  "parameters": {
                    "high-availability": [
                      {
                        "this-server-name": "$(NODE_NAME)",
                        "mode": "hot-standby",
                        "max-unacked-clients": 5,
                        "peers": [
                          {"name":"provisioner-0","role":"primary","url":"http://192.168.126.217:58082/"},{"name":"provisioner-1","role":"standby","url":"http://192.168.126.218:58082/"}
                        ]
                      }
                    ]
                  }
                }
              ],
              "subnet4": [
                {
                  "subnet": "192.168.62.0/23",
                  "option-data": [
                    {
                      "name": "routers",
                      "data": "192.168.62.240"
                    }
                  ],
                  "pools": [
                    {
                      "pool": "192.168.62.64/26"
                    }
                  ]
                },
                {
                  "subnet": "192.168.126.0/23",
                  "option-data": [
                    {
                      "name": "routers",
                      "data": "192.168.126.240"
                    },
                    {
                      "name": "interface-mtu",
                      "data": "9000"
                    }
                  ],
                  "pools": [
                    {
                      "pool": "192.168.126.64/26"
                    }
                  ]
                }
              ],
              "dhcp-ddns": {
                "enable-updates": true,
                "qualifying-suffix": "host.internal.",
                "override-client-update": true,
                "override-no-update": true,
                "replace-client-name": "when-not-present"
              }
            }
          }
      volumeMounts:
      - name: kea-path
        mountPath: "/var/lib/kea"
        readOnly: false
    volumes:
    - name: kea-path
      emptyDir: {}
- apiVersion: v1
  kind: Pod
  metadata:
    namespace: kube-system
    name: keepalived
  spec:
    restartPolicy: Always
    hostNetwork: true
    containers:
    - name: keepalived
      image: randomcoww/keepalived:20180913.01
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      args:
      - "-P"
      env:
      - name: KEEPALIVED_LOCAL_CONFIG
        value: |-
          global_defs {
            vrrp_version 3
          }
          vrrp_instance VI_gateway {
            state BACKUP
            strict_mode off
            virtual_router_id 247
            interface eth1
            track_interface {
              eth2
            }
            priority 100
            virtual_ipaddress {
              192.168.126.240 dev eth1
              192.168.62.240 dev eth0
            }
          }
          vrrp_script CHK_matchbox {
            script "nc -z -w5 localhost 58080"
            interval 2
          }
          vrrp_instance VI_matchbox_store {
            state BACKUP
            strict_mode off
            virtual_router_id 39
            interface eth1
            priority 100
            virtual_ipaddress {
              192.168.126.242
            }
            track_script {
              CHK_matchbox
            }
          }
- apiVersion: v1
  kind: Pod
  metadata:
    name: kea-tftp
  spec:
    restartPolicy: Always
    hostNetwork: true
    containers:
    - name: tftpd-ipxe
      image: randomcoww/tftpd_ipxe:20180913.01
      args:
      - "--address"
      - 0.0.0.0:69
      - "--verbose"
- kind: Pod
  apiVersion: v1
  metadata:
    name: matchbox
  spec:
    hostNetwork: true
    containers:
    - name: matchbox
      image: quay.io/coreos/matchbox:latest
      args:
      - "-address=0.0.0.0:58080"
      - "-rpc-address=0.0.0.0:58081"
      - "-ca-file=/etc/ssl/certs/ca.pem"
      - "-cert-file=/etc/ssl/certs/matchbox.pem"
      - "-key-file=/etc/ssl/certs/matchbox-key.pem"
      - "-data-path=/var/lib/matchbox"
      - "-assets-path="
      volumeMounts:
      - mountPath: "/etc/ssl/certs"
        name: certs-path
        readOnly: true
      - mountPath: "/var/lib/matchbox"
        name: matchbox-data
        readOnly: false
    - name: syncthing
      image: randomcoww/syncthing:20181125.01
      env:
      - name: NODE_IP
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: CERT_PATH
        value: /etc/ssl/certs/syncthing.pem
      - name: KEY_PATH
        value: /etc/ssl/certs/syncthing-key.pem
      - name: SYNCTHING_LOCAL_CONFIG
        value: |-
          <configuration>
            <folder id="matchbox" label="matchbox" path="/var/lib/matchbox" type="sendreceive" fsWatcherEnabled="true" fsWatcherDelayS="1" rescanIntervalS="10" autoNormalize="false">
              <device id="5KRPDOW-PV74VRB-OBVWNDY-CPK35QW-HD56ZRN-LMGNWIA-QOYIOGV-4HRMAAO"></device><device id="5VBZ3SG-UZNR5DT-EGDTU25-UMWGPGU-J44KCUO-OGUPNNU-SDHCR2W-NEBINA7"></device>
              <maxConflicts>1</maxConflicts>
            </folder>
            <device id="5KRPDOW-PV74VRB-OBVWNDY-CPK35QW-HD56ZRN-LMGNWIA-QOYIOGV-4HRMAAO" compression="always" skipIntroductionRemovals="true"><address>192.168.126.217:22000</address><allowedNetwork>192.168.126.0/23</allowedNetwork></device><device id="5VBZ3SG-UZNR5DT-EGDTU25-UMWGPGU-J44KCUO-OGUPNNU-SDHCR2W-NEBINA7" compression="always" skipIntroductionRemovals="true"><address>192.168.126.218:22000</address><allowedNetwork>192.168.126.0/23</allowedNetwork></device>
            <gui enabled="false"/>
            <options>
              <listenAddress>$(NODE_IP):22000</listenAddress>
              <globalAnnounceEnabled>false</globalAnnounceEnabled>
              <localAnnounceEnabled>false</localAnnounceEnabled>
              <reconnectionIntervalS>5</reconnectionIntervalS>
              <relaysEnabled>false</relaysEnabled>
              <startBrowser>false</startBrowser>
              <natEnabled>false</natEnabled>
              <urAccepted>-1</urAccepted>
              <autoUpgradeIntervalH>0</autoUpgradeIntervalH>
              <defaultFolderPath></defaultFolderPath>
            </options>
          </configuration>
      volumeMounts:
      - mountPath: "/etc/ssl/certs"
        name: certs-path
        readOnly: true
      - mountPath: "/var/lib/matchbox"
        name: matchbox-data
        readOnly: false
    volumes:
    - name: certs-path
      hostPath:
        path: "/etc/ssl/certs"
    - name: matchbox-data
      emptyDir: {}