---
variant: fcos
version: 1.4.0
systemd:
  units:
    - name: virtproxyd-tls.socket
      enabled: true
    - name: ksm.service
      enabled: true
    - name: ksmtuned.service
      enabled: true
    # PXE boot
    - name: matchbox.service
      enabled: true
      contents: |
        [Unit]
        After=network-online.target
        Wants=network-online.target
        Before=libvirtd.service
        WantedBy=libvirtd.service

        [Service]
        TimeoutStartSec=5m
        Restart=always
        RestartSec=10
        ExecStartPre=/usr/bin/mkdir -p \
          ${matchbox_data_path}
        ExecStartPre=/usr/bin/podman load -i \
          ${container_image_load_paths.matchbox}
        ExecStartPre=-/usr/bin/podman kill matchbox
        ExecStartPre=-/usr/bin/podman rm matchbox
        ExecStart=/usr/bin/podman run --rm -it \
          --name matchbox \
          --security-opt label=disable \
          --log-driver none \
          --network host \
          -v ${matchbox_data_path}:${matchbox_data_path} \
          -v ${pxeboot_image_path}:${matchbox_assets_path}:ro \
          %{~ for cert in certs.matchbox ~}
          -v ${cert.path}:${cert.path}:ro \
          %{~ endfor ~}
          ${container_images.matchbox} \
            -address=${cidrhost(
              internal_interface.prefix,
              internal_interface.netnum,
            )}:${ports.matchbox_http} \
            -rpc-address=0.0.0.0:${ports.matchbox_rpc} \
            -ca-file=${certs.matchbox.ca.path} \
            -cert-file=${certs.matchbox.cert.path} \
            -key-file=${certs.matchbox.key.path} \
            -data-path=${matchbox_data_path} \
            -assets-path=${matchbox_assets_path}

        [Install]
        WantedBy=multi-user.target
    - name: kea-dhcp4.service
      enabled: true
      dropins:
        - name: internal.conf
          contents: |
            [Unit]
            After=matchbox.service
            Wants=matchbox.service
            Before=libvirtd.service
            WantedBy=libvirtd.service

            [Service]
            ExecStart=
            ExecStart=/usr/sbin/kea-dhcp4 -c ${kea_config_path}

storage:
  files:
    # kea #
    - path: ${kea_config_path}
      mode: 0644
      overwrite: true
      contents:
        inline: |
          ${jsonencode({
            "Dhcp4" = {
              "lease-database" = {
                "type" = "memfile"
              }
              "interfaces-config" = {
                "interfaces" = [
                  "${internal_interface.interface_name}-tap",
                ]
              }
              "client-classes" = [
                {
                  "name" = "ipxe_detected"
                  "test" = "substring(option[77].hex,0,4) == 'iPXE'"
                  "boot-file-name" = "http://${cidrhost(
                      internal_interface.prefix,
                      internal_interface.netnum,
                    )}:${ports.matchbox_http}/boot.ipxe"
                },
              ]
              "subnet4" = [
                {
                  "subnet" = internal_interface.prefix
                  "pools" = [
                    {
                      "pool" = cidrsubnet(
                        internal_interface.prefix,
                        internal_interface.dhcp_subnet.newbit,
                        internal_interface.dhcp_subnet.netnum,
                      )
                    },
                  ]
                },
              ]
            }
          })}

    # internal interface #
    - path: /etc/systemd/network/10-${internal_interface.interface_name}.netdev
      mode: 0644
      contents:
        inline: |
          [NetDev]
          Name=${internal_interface.interface_name}
          Kind=bridge
    - path: /etc/systemd/network/12-${internal_interface.interface_name}.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=${internal_interface.interface_name}

          [Link]
          ARP=false

          [Network]
          LinkLocalAddressing=false
          DHCP=false
          MACVTAP=${internal_interface.interface_name}-tap
          Bridge=${internal_interface.interface_name}-dummy
    - path: /etc/systemd/network/10-${internal_interface.interface_name}-dummy.netdev
      mode: 0644
      contents:
        inline: |
          [NetDev]
          Name=${internal_interface.interface_name}-dummy
          Kind=dummy
    - path: /etc/systemd/network/12-${internal_interface.interface_name}-dummy.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=${internal_interface.interface_name}-dummy

          [Link]
          ARP=false

          [Network]
          LinkLocalAddressing=false
          DHCP=false
          Bridge=${internal_interface.interface_name}
    # tap interfaces
    - path: /etc/systemd/network/20-${internal_interface.interface_name}-tap.netdev
      mode: 0644
      contents:
        inline: |
          [NetDev]
          Name=${internal_interface.interface_name}-tap
          Kind=macvtap

          [MACVTAP]
          Mode=bridge
    - path: /etc/systemd/network/22-${internal_interface.interface_name}-tap.network
      mode: 0644
      contents:
        inline: |
          [Match]
          Name=${internal_interface.interface_name}-tap

          [Link]
          ARP=false

          [Network]
          LinkLocalAddressing=false
          DHCP=false
          MulticastDNS=false

          [Address]
          Address=${cidrhost(
            internal_interface.prefix,
            internal_interface.netnum,
          )}/${internal_interface.cidr}

    # certs #
    %{~ for cert_category in values(certs) ~}
    %{~ for cert in values(cert_category) ~}
    - path: ${cert.path}
      mode: 0644
      contents:
        inline: "${replace(cert.content, "\n", "\\n")}"
    %{~ endfor ~}
    %{~ endfor ~}

passwd:
  users:
    ${indent(4, yamlencode([user]))}