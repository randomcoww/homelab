lang en_US.UTF-8
keyboard us
timezone --utc America/Los_Angeles
auth --useshadow --passalgo=sha512
selinux --disabled
firewall --disabled
zerombr
clearpart --all --disklabel=gpt
part / --size 122880 --fstype ext4
rootpw --lock --iscrypted locked
shutdown
bootloader --append="elevator=noop intel_iommu=on iommu=pt plymouth.enable=0 rd.plymouth=0 rd.driver.pre=vfio-pci video=vesafb:off,efifb:off rd.live.image ro rd.live.overlay.overlayfs=1 rd.live.overlay.thin=1"

repo --name=fedora --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch
repo --name=updates --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f$releasever&arch=$basearch
repo --name=zfs-on-linux --baseurl=http://download.zfsonlinux.org/fedora/$releasever/$basearch/
url --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch

repo --name=rpmfusion-free --install --baseurl=http://download1.rpmfusion.org/free/fedora/releases/$releasever/Everything/$basearch/os/
repo --name=rpmfusion-free-updates --install --baseurl=http://download1.rpmfusion.org/free/fedora/updates/$releasever/$basearch/
repo --name=rpmfusion-nonfree --install --baseurl=http://download1.rpmfusion.org/nonfree/fedora/releases/$releasever/Everything/$basearch/os/
repo --name=rpmfusion-nonfree-updates --install --baseurl=http://download1.rpmfusion.org/nonfree/fedora/updates/$releasever/$basearch/

repo --name=kubernetes --install --baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
repo --name=code --install --baseurl=https://packages.microsoft.com/yumrepos/vscode
repo --name=docker-ce --install --baseurl=https://download.docker.com/linux/fedora/$releasever/$basearch/stable

%packages --excludeWeakdeps
@core
@firefox
@fonts
@gnome-desktop
@hardware-support
@printing
@base-x

## livecd-creator
kernel
dracut-live
grub2-efi-x64-cdboot
shim
##

libvirt-daemon-kvm
qemu-kvm
ksmtuned
ipmitool
cronie
chrony
logrotate
nfs-utils
docker-ce

screen
pciutils
lm_sensors
rsync
hdparm
libvirt-client
virt-viewer
libva-utils
libva-intel-driver
vim-enhanced
tilix
golang
kubectl
code
mpv
youtube-dl
nmap
unzip
awscli
livecd-tools
remmina
gimp
bind-utils

## looking-glass
SDL2_ttf
##

-zfs-fuse
-NetworkManager
-plymouth
%end

%post --erroronfail

## livecd-creator does not parse user - create here
useradd \
  -U \
  -m \
  -p {{.password}} \
  -G wheel,libvirt,docker \
  {{.default_user}}

##
## networkd
##

## enable systemd-resolve
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

## write all configs
cat <<EOF > /etc/systemd/resolved.conf
[Resolve]
FallbackDNS=
DNSStubListener=no
EOF

## host macvtap
cat <<EOF > /etc/systemd/network/00_{{.host_if}}.network
[Match]
Name={{.host_if}}

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
MACVTAP=v{{.host_if}}
EOF

cat <<EOF > /etc/systemd/network/00_v{{.host_if}}.netdev
[NetDev]
Name=v{{.host_if}}
Kind=macvtap

[MACVTAP]
Mode=bridge
EOF

cat <<EOF > /etc/systemd/network/00_v{{.host_if}}.network
[Match]
Name=v{{.host_if}}

[Link]
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=yes

[Address]
Address={{.host_ip}}/{{.host_netmask}}
EOF

##
## general file writes
##

cat <<EOF > /etc/modprobe.d/local.conf
options vfio-pci ids=1002:ffffffff:ffffffff:ffffffff:00030000:ffff00ff,1002:ffffffff:ffffffff:ffffffff:00040300:ffffffff,10de:ffffffff:ffffffff:ffffffff:00030000:ffff00ff,10de:ffffffff:ffffffff:ffffffff:00040300:ffffffff
options kvm ignore_msrs=1
EOF

cat <<EOF > /etc/dracut.conf.d/local.conf
add_drivers+="vfio vfio_iommu_type1 vfio_pci vfio_virqfd"
EOF

##
## live image settings
## systemd configs from https://linux.xvx.cz/2017/07/how-to-build-pxe-fedora-26-live-image.html
## https://fedoraproject.org/wiki/LiveOS_image
##

cat <<EOF >> /etc/systemd/system.conf
DumpCore=no
EOF

cat <<EOF >> /etc/systemd/journald.conf
Storage=volatile
RuntimeMaxUse=15M
ForwardToSyslog=no
ForwardToConsole=no
EOF

##
## add modules to initramfs
##

KERNEL_VERSION=$(rpm -q kernel --qf '%{version}-%{release}.%{arch}\n')
dracut -f /boot/initramfs-$KERNEL_VERSION.img $KERNEL_VERSION

##
## enable services
##

systemctl enable \
  systemd-networkd systemd-resolved chronyd crond \
  ksm ksmtuned docker

systemctl mask \
  NetworkManager

systemctl set-default graphical.target

##
## cleanup
##

dnf -y autoremove
dnf -y clean all

rm -f /etc/machine-id
touch /etc/machine-id

%end
