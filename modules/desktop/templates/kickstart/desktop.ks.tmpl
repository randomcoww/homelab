install
skipx
lang en_US.UTF-8
keyboard us
timezone --utc America/Los_Angeles
auth --useshadow --passalgo=sha512
selinux --disabled
firewall --disabled
zerombr
clearpart --none --disklabel=gpt

part /boot/efi --fstype=efi --size=200 --onpart /dev/nvme0n1p1
part /boot --fstype=ext4 --size=512 --onpart /dev/nvme0n1p2
part / --fstype=ext4 --size=20480 --onpart /dev/nvme0n1p3
part /home --fstype=ext4 --size=1024 --grow --noformat --onpart /dev/nvme0n1p4

rootpw --lock --iscrypted locked
network --hostname={{.hostname}}
shutdown
bootloader --append="elevator=noop intel_iommu=on iommu=pt plymouth.enable=0 rd.plymouth=0 rd.driver.pre=vfio-pci video=vesafb:off,efifb:off"

repo --name=fedora --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch
repo --name=updates --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f$releasever&arch=$basearch
url --mirrorlist=https://mirrors.fedoraproject.org/mirrorlist?repo=fedora-$releasever&arch=$basearch

repo --name=rpmfusion-free --metalink=https://mirrors.rpmfusion.org/metalink?repo=free-fedora-$releasever&arch=$basearch
repo --name=rpmfusion-free-updates --metalink=https://mirrors.rpmfusion.org/metalink?repo=free-fedora-updates-released-$releasever&arch=$basearch
repo --name=rpmfusion-nonfree --metalink=https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-$releasever&arch=$basearch
repo --name=rpmfusion-nonfree-updates --metalink=https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-updates-released-$releasever&arch=$basearch

repo --name=kubernetes --baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
repo --name=code --baseurl=https://packages.microsoft.com/yumrepos/vscode
#repo --name=docker-ce --baseurl=https://download.docker.com/linux/fedora/$releasever/$basearch/test

%packages --excludeWeakdeps

## common
@core
libvirt-daemon-kvm
ksmtuned
cronie
chrony
logrotate
nfs-utils
openssh-server
##

@firefox
@fonts
@gnome-desktop
@hardware-support
@printing
@base-x
hdparm
ipmitool
pciutils
lm_sensors
libvirt-client
rsync
tmux
xclip
dnf-plugins-core
#docker-ce
#docker-compose
libva-utils
libva-intel-driver
vim-enhanced
golang
kubectl
code
mpv
youtube-dl
nmap
unzip
awscli
lorax-lmc-novirt
virt-viewer
gimp
ldns-utils
openssl
steam
vlc
jq
ncmpcpp

-plymouth
-plymouth-*
%end

##
## user
##

user --name={{.default_user}} --password={{.password}} --plaintext --uid=1000 --gid=1000 --groups=wheel,libvirt,docker,qemu,input
sshkey --username={{.default_user}} "{{.ssh_authorized_key}}"

%post --erroronfail

##
## fix broken docker install
##

dnf config-manager \
  --add-repo \
  https://download.docker.com/linux/fedora/docker-ce.repo
dnf install -y \
  docker-ce \
  docker-compose
gpasswd -a {{.default_user}} docker

##
## networkd
##

## enable systemd-resolve
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

## write all configs
cat <<EOF > /etc/systemd/resolved.conf
[Resolve]
FallbackDNS=
DNSStubListener=no
EOF

## default

cat <<EOF > /etc/systemd/network/99_en.network
[Match]
Name=en*

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
EOF

cat <<EOF > /etc/systemd/network/00_{{.host_if}}.network
[Match]
Name={{.host_if}}

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
MACVTAP=int0
VLAN=env30
VLAN=env60
VLAN=env90
EOF

## vswitch bridge

cat <<EOF > /etc/systemd/network/{{.ll_if}}.netdev
[NetDev]
Name={{.ll_if}}
Kind=bridge
EOF

cat <<EOF > /etc/systemd/network/{{.ll_if}}.network
[Match]
Name={{.ll_if}}

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
MACVTAP=int1
Bridge=dummy0
EOF

cat <<EOF > /etc/systemd/network/dummy0.netdev
[NetDev]
Name=dummy0
Kind=dummy
EOF

cat <<EOF > /etc/systemd/network/dummy0.network
[Match]
Name=dummy0

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
Bridge=br0
EOF

## vlan

cat <<EOF > /etc/systemd/network/env30.netdev
[NetDev]
Name=env30
Kind=vlan

[VLAN]
Id=30
EOF

cat <<EOF > /etc/systemd/network/env60.netdev
[NetDev]
Name=env60
Kind=vlan

[VLAN]
Id=60
EOF

cat <<EOF > /etc/systemd/network/env90.netdev
[NetDev]
Name=env90
Kind=vlan

[VLAN]
Id=90
EOF

## host macvtap

cat <<EOF > /etc/systemd/network/int0.netdev
[NetDev]
Name=int0
Kind=macvtap

[MACVTAP]
Mode=bridge
EOF

cat <<EOF > /etc/systemd/network/int0.network
[Match]
Name=int0

[Link]
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=yes

[Address]
Address={{.host_ip}}/{{.host_netmask}}
EOF

## host macvtap to vswitch

cat <<EOF > /etc/systemd/network/int1.netdev
[NetDev]
Name=int1
Kind=macvtap

[MACVTAP]
Mode=bridge
EOF

cat <<EOF > /etc/systemd/network/int1.network
[Match]
Name=int1

[Link]
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no

[Address]
Address={{.ll_ip}}/{{.ll_netmask}}
EOF

##
## general file writes
##

cat <<EOF > /etc/modprobe.d/local.conf
options vfio-pci ids=1002:ffffffff:ffffffff:ffffffff:00030000:ffff00ff,1002:ffffffff:ffffffff:ffffffff:00040300:ffffffff,10de:ffffffff:ffffffff:ffffffff:00030000:ffff00ff,10de:ffffffff:ffffffff:ffffffff:00040300:ffffffff
EOF

cat <<EOF > /etc/ssh/sshd_config
Subsystem sftp internal-sftp
ClientAliveInterval 180
UseDNS no
PasswordAuthentication no
ChallengeResponseAuthentication no
EOF

cat <<EOF > /etc/dracut.conf.d/local.conf
add_drivers+="vfio vfio_iommu_type1 vfio_pci vfio_virqfd"
EOF

cat <<EOF > /etc/sysctl.d/local.conf
vm.nr_hugepages=4096
EOF

##
## add modules to initramfs
##

KERNEL_VERSION=$(rpm -q kernel --qf '%{version}-%{release}.%{arch}\n')
dracut -f /boot/initramfs-$KERNEL_VERSION.img $KERNEL_VERSION

##
## enable services
##

systemctl enable \
  systemd-networkd systemd-resolved chronyd crond \
  libvirtd ksm ksmtuned \
  docker sshd

systemctl mask \
  NetworkManager

systemctl set-default graphical.target

##
## qemu.conf changes needed for evdev and pa
##

cat <<EOF >> /etc/libvirt/qemu.conf
user = "{{.default_user}}"
cgroup_device_acl = [
    "/dev/null", "/dev/full", "/dev/zero",
    "/dev/random", "/dev/urandom",
    "/dev/ptmx", "/dev/kvm", "/dev/kqemu",
    "/dev/rtc","/dev/hpet", "/dev/sev",
    "/dev/input/by-id/usb-Logitech_USB_Receiver-event-mouse",
    "/dev/input/by-id/usb-Cooler_Master_Technology_Inc._MasterKeys_S-event-kbd",
]
EOF

##
## cleanup
##

dnf -y autoremove
dnf -y clean all

rm -f /etc/machine-id
touch /etc/machine-id

%end