---
variant: fcos
version: 1.3.0
systemd:
  units:
    # Handle nvidia container runtime
    - name: containerd.service
      enabled: true
      dropins:
        - name: 11-nvidia-config.conf
          contents: |
            [Service]
            ExecStart=
            ExecStart=/usr/bin/containerd -c /etc/containerd/config-nvidia.toml

    - name: default-dconf-update.service
      enabled: true
      contents: |
        [Unit]
        ConditionFirstBoot=true
        ConditionDirectoryNotEmpty=/etc/dconf/db/local.d/

        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/usr/bin/dconf update

        [Install]
        WantedBy=graphical.target
    - name: lm_sensors.service
      enabled: true
      dropins:
        - name: 10-vm.conf
          contents: |
            [Unit]
            ConditionVirtualization=!vm
            ConditionVirtualization=!container

storage:
  files:
    ##
    ## misc configs
    ## add to global paths - persistent home directory is mounted afterwards
    ##

    - path: /etc/profile.d/helper.sh
      mode: 0644
      contents:
        inline: |
          # https://github.com/randomcoww/terraform-infra
          tw() {
            set -x
            podman run -it --rm --security-opt label=disable \
              -v $HOME/.aws:/root/.aws \
              -v $(pwd):/root/mnt \
              -v /var/cache:/var/cache \
              -w /root/mnt/resources \
              --net=host \
              ${container_images.tw} "$@"
            rc=$?; set +x; return $rc
          }
    - path: /etc/profile.d/tmux.sh
      mode: 0644
      contents:
        inline: |
          if command -v tmux >/dev/null 2>&1 && [ "$${DISPLAY}" ]; then
            # if not inside a tmux session, and if no session is started, start a new session
            [ -z "$${TMUX}" ] && (tmux attach >/dev/null 2>&1 || tmux)
          fi
    - path: /etc/tmux.conf
      mode: 0644
      contents:
        inline: |
          set -g history-limit 10000
          set -g mouse on
          set-option -s set-clipboard off
          bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"
    - path: /etc/mpv/mpv.conf
      mode: 0644
      contents:
        inline: |
          profile=gpu-hq
          hwdec=vaapi
    - path: /etc/pulse/daemon.conf
      append:
        - inline: |
            default-sample-format = float32le
            default-sample-rate = 48000
            alternate-sample-rate = 44100
            resample-method = soxr-vhq
            high-priority = yes
            nice-level = -11
            realtime-scheduling = yes
            realtime-priority = 9
            rlimit-rtprio = 9
            daemonize = no
    # Controller support in steam
    - path: /etc/udev/rules.d/62-steam-input.rules
      mode: 0644
      contents:
        inline: |
          ${indent(10, udev_steam_input)}
    - path: /etc/udev/rules.d/62-steam-vr.rules
      mode: 0644
      contents:
        inline: |
          ${indent(10, udev_steam_vr)}
    # Radeon
    - path: /etc/environment
      append:
        - inline: |
            RADV_PERFTEST=aco

    ## Nvidia container runtime handling
    # containerd
    - path: /etc/containerd/config-nvidia.toml
      mode: 0644
      overwrite: true
      contents:
        inline: |-
          oom_score = -999
          version = 2

          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
              disable_tcp_service = true

              [plugins."io.containerd.grpc.v1.cri".containerd]
                default_runtime_name = "nvidia"

                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
                    runtime_type = "io.containerd.runc.v2"
                    runtime_engine = ""
                    runtime_root = ""
                    privileged_without_host_devices = false
                    base_runtime_spec = ""

                    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
                      BinaryName = "nvidia-container-runtime"
    # Containerd needs `no-cgroups = false` but podman needs `no-cgroups = true`
    - path: /etc/profile.d/podman-nvidia.sh
      mode: 0644
      contents:
        inline: |
          # Use custom nvidia-container-runtime hook
          alias podman='podman --hooks-dir=/etc/containers/oci/hooks.d' 2>/dev/null
    - path: /etc/nvidia-container-runtime/podman-config.toml
      overwrite: true
      contents:
        inline: |
          disable-require = false

          [nvidia-container-cli]
          environment = []
          load-kmods = true
          no-cgroups = true
          ldconfig = "@/sbin/ldconfig"
    - path: /etc/containers/oci/hooks.d/oci-nvidia-hook.json
      contents:
        inline: |
          {
            "version": "1.0.0",
            "hook": {
              "path": "/usr/bin/nvidia-container-toolkit",
              "args": [
                "nvidia-container-toolkit",
                "-config",
                "/etc/nvidia-container-runtime/podman-config.toml",
                "prestart"
              ],
              "env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
              ]
            },
            "when": {
              "always": true,
              "commands": [".*"]
            },
            "stages": ["prestart"]
          }

    ##
    ## gnome desktop config
    ##
    - path: /etc/dconf/db/local.d/00-custom
      mode: 0644
      contents:
        inline: |
          [org/gnome/system/location]
          enabled=false

          [org/gnome/desktop/datetime]
          automatic-timezone=false

          [org/gnome/settings-daemon/plugins/color]
          night-light-enabled=true
          night-light-schedule-automatic=true

          [org/gnome/settings-daemon/plugins/power]
          ambient-enabled=false
          idle-dim=false

          [org/gnome/desktop/media-handling]
          automount=false
          autorun-never=true

          [org/gnome/desktop/sound]
          event-sounds=false

          [org/gnome/desktop/session]
          idle-delay=uint32 3600

          [org/gnome/desktop/peripherals/touchpad]
          tap-to-click=true
          two-finger-scrolling-enabled=true

          [org/gnome/desktop/privacy]
          disable-camera=true
          disable-microphone=true
          old-files-age=uint32 1
          remember-recent-files=false
          remove-old-temp-files=true
          remove-old-trash-files=true
          report-technical-problems=false

          [org/gnome/software]
          first-run=false
          show-nonfree-prompt=false

          [org/gnome/desktop/notifications]
          show-in-lock-screen=false

          [org/gnome/desktop/interface]
          enable-hot-corners=false
    # Shadow PC client display workaround
    # https://gitlab.com/NicolasGuilloux/shadow-live-os/raw/arch-master/airootfs/etc/drirc
    - path: /etc/drirc
      mode: 0644
      contents:
        inline: |
          <driconf>
            <device driver="radeonsi">
              <application name="Shadow" executable="Shadow">
                <option name="allow_rgb10_configs" value="false" />
                <option name="radeonsi_clear_db_cache_before_clear" value="true" />
              </application>
            </device>
            <device driver="radeon">
              <application name="Shadow" executable="Shadow">
                <option name="allow_rgb10_configs" value="false" />
              </application>
            </device>
            <device driver="iris">
              <application name="Shadow" executable="Shadow">
                <option name="allow_rgb10_configs" value="false" />
              </application>
            </device>
          </driconf>
  links:
    - path: /etc/localtime
      target: /usr/share/zoneinfo/${local_timezone}