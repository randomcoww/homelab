---
variant: fcos
version: 1.0.0
systemd:
  units:
    - name: systemd-networkd-wait-online.service
      mask: true
    - name: avahi-daemon.service
      enabled: true
    - name: avahi-daemon.socket
      enabled: true
    - name: NetworkManager.service
      enabled: true
    - name: NetworkManager-wait-online.service
      enabled: true
storage:
  files:
    # Let avahi handle mDNS
    - path: /etc/systemd/resolved.conf.d/10-disable-mdns.conf
      mode: 0644
      contents:
        inline: |
          [Resolve]
          MulticastDNS=false
    - path: /etc/modules-load.d/mlx4_core.conf
      mode: 0644
      contents:
        inline: mlx4_core
    # https://docs.mellanox.com/pages/viewpage.action?pageId=19798214
    # FCOS writes these files too late and is not able to pass module params
    # - path: /etc/modprobe.d/mlx4_core.conf
    #   mode: 0644
    #   contents:
    #     inline: |
    #       options mlx4_core num_vfs=8 port_type_array=2 probe_vf=8
    - path: /etc/NetworkManager/conf.d/base.conf
      mode: 0644
      contents:
        inline: |
          [main]
          no-auto-default=*
    %{~ for v in p.hwif ~}
    - path: /etc/NetworkManager/system-connections/${v.label}.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          interface-name=${v.if}
          type=802-3-ethernet

          [802-3-ethernet]
          mtu=${lookup(v, "mtu", 9000)}

          # Kind of a hack to only specify unused ipv6 configuration
          # This brings up the interface with mtu and vfs without
          # adding ipv4 addresses
          [ipv4]
          method=disabled

          [ipv6]
          method=link-local
    %{~ endfor ~}
    %{~ for v in p.network ~}
    %{~ if lookup(v, "id", null) != null ~}
    - path: /etc/NetworkManager/system-connections/${v.label}.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          type=vlan
          %{~ if lookup(v, "disabled", false) ~}
          autoconnect=false
          %{~ endif ~}
          mdns=%{if lookup(v, "mdns", false)}2%{else}0%{endif}

          [vlan]
          parent=${p.hwif_by_key[v.hwif].if}
          id=${v.id}

          [ipv4]
          method=%{if lookup(v, "dhcp", false)}auto%{else}manual%{endif}
          %{~ if lookup(v, "ip", null) != null && lookup(v, "cidr", null) != null ~}
          addresses=${v.ip}/${v.cidr}
          %{~ endif ~}

          [ipv6]
          method=link-local
    %{~ endif ~}
    %{~ endfor ~}
    %{~ if length(wireguard_config) > 0 ~}
    - path: /etc/NetworkManager/system-connections/wireguard.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          type=wireguard
          interface-name=wg0
          autoconnect=false

          [wireguard]
          private-key=${wireguard_config.Interface.PrivateKey}
          ip4-auto-default-route=1
          mtu=9000

          [wireguard-peer.${wireguard_config.Peer.PublicKey}]
          endpoint=${wireguard_config.Peer.Endpoint}
          allowed-ips=${wireguard_config.Peer.AllowedIPs}

          [ipv4]
          method=manual
          address=${wireguard_config.Interface.Address}
    %{~ endif ~}