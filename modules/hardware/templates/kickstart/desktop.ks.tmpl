##
## desktop-* host kickstart for livecd-creator
##

timezone --utc America/Los_Angeles
selinux --disabled
part / --size 20480 --fstype ext4

## Not used for live images. Add this to lorax template.
# bootloader --append="rd.live.image elevator=noop intel_iommu=on iommu=pt rd.live.ram=1 plymouth.enable=0 rd.plymouth=0 rd.driver.blacklist=nouveau modprobe.blacklist=nouveau"

repo --name=rpmfusion-free --metalink=https://mirrors.rpmfusion.org/metalink?repo=free-fedora-$releasever&arch=$basearch
repo --name=rpmfusion-free-updates --metalink=https://mirrors.rpmfusion.org/metalink?repo=free-fedora-updates-released-$releasever&arch=$basearch
repo --name=rpmfusion-nonfree --metalink=https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-$releasever&arch=$basearch
repo --name=rpmfusion-nonfree-updates --metalink=https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-updates-released-$releasever&arch=$basearch

## install nvidia driver from rawhide
repo --name=rpmfusion-nonfree-rawhide --metalink=https://mirrors.rpmfusion.org/metalink?repo=nonfree-fedora-rawhide&arch=$basearch --includepkgs=xorg-x11-drv-nvidia

repo --name=kubernetes --baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
repo --name=code --baseurl=https://packages.microsoft.com/yumrepos/vscode
repo --name=winehq --baseurl=https://dl.winehq.org/wine-builds/fedora/$releasever
repo --name=docker-ce-stable --baseurl=https://download.docker.com/linux/fedora/$releasever/$basearch/stable

%packages

@firefox
@fonts
@gnome-desktop
@hardware-support
@printing
@base-x
hdparm
ipmitool
pciutils
lm_sensors
libvirt-client
rsync
tmux
xclip
vim-enhanced
git
golang
kubectl
code
mpv
youtube-dl
nmap
unzip
awscli
lorax-lmc-novirt
xorriso
virt-viewer
gimp
ldns-utils
openssl
vlc
jq
ncmpcpp
deadbeef
podman

## docker frequently fails to install and may need to be commented out
# docker-ce
# docker-compose
##

## nvidia driver
xorg-x11-drv-nvidia
akmod-nvidia
vdpauinfo
libva-vdpau-driver
libva-utils
##

## gaming
steam
lutris
gnutls
gnutls-devel
openldap
openldap-devel
libgpg-error
sqlite2.i686
sqlite2.x86_64
winehq-staging
##

-gnome-boxes
-gnome-initial-setup

%end

##
## user
##

user --name={{.default_user}} --password={{.password}} --plaintext --uid=1000 --gid=1000 --groups=wheel,libvirt,docker --homedir={{.localhome_path}}/{{.default_user}}

%post --erroronfail

##
## networkd
##

## default

cat <<EOF > /etc/systemd/network/00_en.network
[Match]
Name=en*

[Link]
ARP=no
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=no
MACVTAP={{.store_macvlan_if}}
EOF

## host macvtap

cat <<EOF > /etc/systemd/network/{{.store_macvlan_if}}.netdev
[NetDev]
Name={{.store_macvlan_if}}
Kind=macvtap

[MACVTAP]
Mode=bridge
EOF

cat <<EOF > /etc/systemd/network/{{.store_macvlan_if}}.network
[Match]
Name={{.store_macvlan_if}}

[Link]
MTUBytes={{.mtu}}

[Network]
LinkLocalAddressing=no
DHCP=yes
EOF

##
## bootstrap image
##

mkdir -p {{.container_linux_image_path}}
cd {{.container_linux_image_path}}
curl -O {{.container_linux_base_url}}/{{.container_linux_version}}/coreos_production_pxe.vmlinuz
curl -O {{.container_linux_base_url}}/{{.container_linux_version}}/coreos_production_pxe_image.cpio.gz

##
## enable services
##

systemctl enable \
  docker

systemctl set-default graphical.target

%end
