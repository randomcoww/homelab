---
networkd:
  units:
    - name: eth0.network
      contents: |
        [Match]
        Name=eth0

        [Network]
        LinkLocalAddressing=no
        DHCP=yes

        [Address]
        Address={{.ip_store}}/{{.netmask_store}}
systemd:
  units:
    - name: kubelet.service
      enabled: true
      contents: |
        [Unit]
        Description=Kubelet via Hyperkube ACI

        [Service]
        Environment="KUBELET_IMAGE=docker://{{.hyperkube_image}}"
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \
          --volume=resolv,kind=host,source=/etc/resolv.conf \
          --mount volume=resolv,target=/etc/resolv.conf \
          --insecure-options=image"
        ExecStartPre=/bin/mkdir -p /var/log/containers
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --allow-privileged=true \
          --manifest-url={{.manifest_url}}
        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline:
          {{.hostname}}
    - path: /var/lib/kubernetes/ca.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_ca}}"
    - path: /var/lib/kubernetes/ca-key.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_ca_key}}"

    - path: /var/lib/kubernetes/kubernetes.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_kubernetes}}"
    - path: /var/lib/kubernetes/kubernetes-key.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_kubernetes_key}}"
    - path: /var/lib/kubernetes/kube-controller-manager.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_controller_manager}}"
    - path: /var/lib/kubernetes/kube-controller-manager-key.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_controller_manager_key}}"
    - path: /var/lib/kubernetes/kube-scheduler.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_scheduler}}"
    - path: /var/lib/kubernetes/kube-scheduler-key.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_scheduler_key}}"

    - path: /var/lib/kubernetes/service-account.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_service_account}}"
    - path: /var/lib/kubernetes/service-account-key.pem
      filesystem: root
      mode: 420
      contents:
        inline: "{{.tls_service_account_key}}"

    - path: /var/lib/kubernetes/kube-scheduler.yaml
      filesystem: root
      mode: 420
      contents:
        inline: |-
          apiVersion: componentconfig/v1alpha1
          kind: KubeSchedulerConfiguration
          clientConnection:
            kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
          leaderElection:
            leaderElect: true

    - path: /var/lib/kubernetes/kube-controller-manager.kubeconfig
      filesystem: root
      mode: 420
      contents:
        inline: |-
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority: /var/lib/kubernetes/ca.pem
              server: {{.apiserver_url}}
            name: {{.cluster_name}}
          contexts:
          - context:
              cluster: {{.cluster_name}}
              user: system:kube-controller-manager
            name: default
          current-context: default
          kind: Config
          preferences: {}
          users:
          - name: system:kube-controller-manager
            user:
              client-certificate: /var/lib/kubernetes/kube-controller-manager.pem
              client-key: /var/lib/kubernetes/kube-controller-manager-key.pem

    - path: /var/lib/kubernetes/kube-scheduler.kubeconfig
      filesystem: root
      mode: 420
      contents:
        inline: |-
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority: /var/lib/kubernetes/ca.pem
              server: {{.apiserver_url}}
            name: {{.cluster_name}}
          contexts:
          - context:
              cluster: {{.cluster_name}}
              user: system:kube-scheduler
            name: default
          current-context: default
          kind: Config
          preferences: {}
          users:
          - name: system:kube-scheduler
            user:
              client-certificate: /var/lib/kubernetes/kube-scheduler.pem
              client-key: /var/lib/kubernetes/kube-scheduler-key.pem

passwd:
  users:
  - name: {{.default_user}}
    ssh_authorized_keys:
      - {{.ssh_authorized_key}}
