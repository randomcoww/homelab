---
networkd:
  units:
    - name: eth0.network
      contents: |
        [Match]
        Name=eth0

        [Network]
        LinkLocalAddressing=no
        DHCP=yes
systemd:
  units:
    - name: kubelet.service
      enabled: true
      contents: |
        [Unit]
        Description=Kubelet via Hyperkube ACI
        [Service]
        Environment="KUBELET_IMAGE=docker://{{.hyperkube_image}}"
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/cache/kubelet-pod.uuid \
          --volume=resolv,kind=host,source=/etc/resolv.conf \
          --mount volume=resolv,target=/etc/resolv.conf \
          --insecure-options=image"
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/bin/mkdir -p /var/log/containers
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/cache/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --allow-privileged=true \
          --manifest-url=https://raw.githubusercontent.com/randomcoww/environment-config/master/manifests/{{.name}} \
          --docker-disable-shared-pid=false \
          --cni-conf-dir=/etc/kubernetes/cni/net.d \
          --network-plugin=cni \
          --container-runtime=docker \
          --kubeconfig=/var/lib/kubelet/client_kubeconfig \
          --cluster_dns={{.cluster_dns_ip}} \
          --cluster_domain={{.cluster_domain}} \
          --register-node=true
        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/cache/kubelet-pod.uuid
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline:
          {{.name}}
    - path: /etc/sysctl.d/max-user-watches.conf
      filesystem: root
      contents:
        inline: |
          fs.inotify.max_user_watches=16184
    - path: {{.cert_base_path}}-ca.pem
      filesystem: root
      contents:
        inline: "{{.internal_ca}}"
    - path: {{.cert_base_path}}-key.pem
      filesystem: root
      contents:
        inline: "{{.internal_key}}"
    - path: {{.cert_base_path}}.pem
      filesystem: root
      contents:
        inline: "{{.internal_cert}}"
    - path: /etc/kube-flannel/net-conf.json
      filesystem: root
      contents:
        inline: |
          {{.flannel_conf}}
    - path: /etc/kubernetes/cni/net.d/10-flannel.conf
      filesystem: root
      contents:
        inline: |
          {{.cni_conf}}
    - path: /var/lib/kubelet/client_kubeconfig
      filesystem: root
      contents:
        inline: |
          {{.kubeconfig}}
passwd:
  users:
  - name: {{.default_user}}
    ssh_authorized_keys:
      - cert-authority {{.ssh_authorized_key}}
